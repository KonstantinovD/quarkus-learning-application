# using that property we should write
# /hello/app/test url instead of /app/test
#
#quarkus.resteasy.path=/hello
#
# has 8080 by default
quarkus.http.port=8080
#quarkus.http.ssl-port=8081
#we can define configurations for different deployment env–profiles
%dev.quarkus.application.name=quarkus-book
%aws-qa.quarkus.application.name=aws-qa-quarkus-book

quarkus.cache.caffeine."weather-cache".initial-capacity = 10
quarkus.cache.caffeine."weather-cache".maximum-size = 30
quarkus.cache.caffeine."weather-cache".expire-after-write = 60S
#quarkus.cache.caffeine."weather-cache".expire-after-access = 10S
#
# uncomment line above means that expire-after-write is not working -
# after the first access (during write) timer will be set to 10
# the same is true if we swap time values
# so, there is no sense in using these properties at the same time

quarkus.smallrye-openapi.path=/openapi/docs
quarkus.swagger-ui.path=/swagger-ui

# We stash the private key in resources directory of my Quarkus app – do
# this more securely in a production application; the public key goes
# in the META-INF directory.
# Next, there’s some configurin’ to do. First, add the smallrye-jwt
# extension; then configure the key and issuer name:
mp.jwt.verify.publickey.location=META-INF/resources/openssl/publicKey.pem
mp.jwt.verify.issuer = SupersonicSubatomic

quarkus.http.non-application-root-path=/
quarkus.smallrye-health.root-path=health


